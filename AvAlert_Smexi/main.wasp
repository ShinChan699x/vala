app AvAlert {
  wasp: {
    version: "^0.11.4"
  },
  title: "AvAlert",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id           Int           @id @default(autoincrement())
    username     String        @unique
    password     String
    observations Observation[]
    forecasts    Forecast[]
psl=}

entity Observation {=psl
    id        Int      @id @default(autoincrement())
    type      String
    notes     String
    timestamp DateTime @default(now())
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
psl=}

entity Forecast {=psl
    id             Int      @id @default(autoincrement())
    zone           String
    riskEvaluation String
    riskFactors    String
    timestamp      DateTime @default(now())
    user           User     @relation(fields: [userId], references: [id])
    userId         Int
psl=}

action createObservation {
  fn: import { createObservation } from "@server/actions.js",
  entities: [User, Observation]
}

action createForecast {
  fn: import { createForecast } from "@server/actions.js",
  entities: [User, Forecast]
}

query getObservations {
  fn: import { getObservations } from "@server/queries.js",
  entities: [User, Observation]
}

query getForecast {
  fn: import { getForecast } from "@server/queries.js",
  entities: [User, Forecast]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/HomePage.jsx",
  authRequired: false
}

route ObservationRoute { path: "/observations", to: ObservationPage }
page ObservationPage {
  component: import { ObservationPage } from "@client/pages/ObservationPage.jsx",
  authRequired: true
}

route ForecastRoute { path: "/forecast", to: ForecastPage }
page ForecastPage {
  component: import { ForecastPage } from "@client/pages/ForecastPage.jsx",
  authRequired: true
}
